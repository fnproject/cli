// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	modelsv2 "github.com/fnproject/fn_go/modelsv2"
)

// ListTriggersReader is a Reader for the ListTriggers structure.
type ListTriggersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTriggersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListTriggersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListTriggersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListTriggersOK creates a ListTriggersOK with default headers values
func NewListTriggersOK() *ListTriggersOK {
	return &ListTriggersOK{}
}

/*ListTriggersOK handles this case with default header values.

List of Triggers
*/
type ListTriggersOK struct {
	Payload *modelsv2.TriggerList
}

func (o *ListTriggersOK) Error() string {
	return fmt.Sprintf("[GET /triggers][%d] listTriggersOK  %+v", 200, o.Payload)
}

func (o *ListTriggersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.TriggerList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTriggersDefault creates a ListTriggersDefault with default headers values
func NewListTriggersDefault(code int) *ListTriggersDefault {
	return &ListTriggersDefault{
		_statusCode: code,
	}
}

/*ListTriggersDefault handles this case with default header values.

An unexpected error occurred.
*/
type ListTriggersDefault struct {
	_statusCode int

	Payload *modelsv2.Error
}

// Code gets the status code for the list triggers default response
func (o *ListTriggersDefault) Code() int {
	return o._statusCode
}

func (o *ListTriggersDefault) Error() string {
	return fmt.Sprintf("[GET /triggers][%d] ListTriggers default  %+v", o._statusCode, o.Payload)
}

func (o *ListTriggersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
