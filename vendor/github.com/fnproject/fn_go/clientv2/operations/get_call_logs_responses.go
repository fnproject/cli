// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	modelsv2 "github.com/fnproject/fn_go/modelsv2"
)

// GetCallLogsReader is a Reader for the GetCallLogs structure.
type GetCallLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCallLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCallLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetCallLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 410:
		result := NewGetCallLogsGone()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCallLogsOK creates a GetCallLogsOK with default headers values
func NewGetCallLogsOK() *GetCallLogsOK {
	return &GetCallLogsOK{}
}

/*GetCallLogsOK handles this case with default header values.

Log found.
*/
type GetCallLogsOK struct {
	Payload *modelsv2.Log
}

func (o *GetCallLogsOK) Error() string {
	return fmt.Sprintf("[GET /fns/{fnID}/calls/{callID}/log][%d] getCallLogsOK  %+v", 200, o.Payload)
}

func (o *GetCallLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.Log)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCallLogsNotFound creates a GetCallLogsNotFound with default headers values
func NewGetCallLogsNotFound() *GetCallLogsNotFound {
	return &GetCallLogsNotFound{}
}

/*GetCallLogsNotFound handles this case with default header values.

Log not found.
*/
type GetCallLogsNotFound struct {
	Payload *modelsv2.Error
}

func (o *GetCallLogsNotFound) Error() string {
	return fmt.Sprintf("[GET /fns/{fnID}/calls/{callID}/log][%d] getCallLogsNotFound  %+v", 404, o.Payload)
}

func (o *GetCallLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCallLogsGone creates a GetCallLogsGone with default headers values
func NewGetCallLogsGone() *GetCallLogsGone {
	return &GetCallLogsGone{}
}

/*GetCallLogsGone handles this case with default header values.

Server does not support this operation.
*/
type GetCallLogsGone struct {
}

func (o *GetCallLogsGone) Error() string {
	return fmt.Sprintf("[GET /fns/{fnID}/calls/{callID}/log][%d] getCallLogsGone ", 410)
}

func (o *GetCallLogsGone) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
