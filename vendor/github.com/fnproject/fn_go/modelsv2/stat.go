// Code generated by go-swagger; DO NOT EDIT.

package modelsv2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Stat stat
// swagger:model Stat
type Stat struct {

	// metrics
	Metrics *StatMetrics `json:"metrics,omitempty"`

	// timestamp
	// Format: date-time
	Timestamp strfmt.DateTime `json:"timestamp,omitempty"`
}

// Validate validates this stat
func (m *Stat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMetrics(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Stat) validateMetrics(formats strfmt.Registry) error {

	if swag.IsZero(m.Metrics) { // not required
		return nil
	}

	if m.Metrics != nil {
		if err := m.Metrics.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metrics")
			}
			return err
		}
	}

	return nil
}

func (m *Stat) validateTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(m.Timestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("timestamp", "body", "date-time", m.Timestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Stat) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Stat) UnmarshalBinary(b []byte) error {
	var res Stat
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// StatMetrics stat metrics
// swagger:model StatMetrics
type StatMetrics struct {

	// cpu kernel
	CPUKernel int64 `json:"cpu_kernel,omitempty"`

	// cpu total
	CPUTotal int64 `json:"cpu_total,omitempty"`

	// cpu user
	CPUUser int64 `json:"cpu_user,omitempty"`

	// disk read
	DiskRead int64 `json:"disk_read,omitempty"`

	// disk write
	DiskWrite int64 `json:"disk_write,omitempty"`

	// mem limit
	MemLimit int64 `json:"mem_limit,omitempty"`

	// mem usage
	MemUsage int64 `json:"mem_usage,omitempty"`

	// net rx
	NetRx int64 `json:"net_rx,omitempty"`

	// net tx
	NetTx int64 `json:"net_tx,omitempty"`
}

// Validate validates this stat metrics
func (m *StatMetrics) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StatMetrics) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StatMetrics) UnmarshalBinary(b []byte) error {
	var res StatMetrics
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
